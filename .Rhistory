library(ggplot2)
install.packages("swirl")
library(swirl)  # Loads swirl
ver()
version()
swirl()
library(swirl)  # Loads swirl
install.packages("swirl")
library(swirl)  # Loads swirl
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
mySqrt <- sqrt(z-1)
mySqrt
myDiv <- z/mySqrt
myDiv
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rer(0,times=40)
rep(0,times=40)
rep(c(1,2,3),times=10)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect <- c(.5 , 55, -10,6)
tf <- num_vect < 1
tf
num_vect >=6
my_char <- c("My", "name","is")
my_char
paste(my_char,collapse=" ")
my_name <- c(my_char,"yariv")
my_name
paste(my_name,collapse=" ")
parse("Hello", "world!",sep=" ")
parse("Hello", "world!", sep = " ")
parse("Hello", "world!")
paste("Hello", "world!",sep=" ")
paste(c(1,2,3),c("X","Y","Z"),sep="")
paste(c("X","Y","Z"),c(1,2,3),sep="")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
c(44,NA,5,NA) -> x
3*x
y <- rnorm(1000)
z <- rep(NA,1000)
myData <- sample(c(y,z),100)
myNA <- is.na(myData)
myNA
myData == NA
sum(myNA)
myData
0/0
inf-inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[Iis.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x >0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
myVector <- c(1:20)
myVector <- 1:20
myVector
dim(myVector)
length(myVector)
dim(myVector) <- c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?martix()]
?martix()
?martix
?matrix
myMatrix2 <- matrix(1:20,nrow=4,ncol=5)
identical(myMatrix,myMatrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients,myMatrix)
myData <- data.frame(patients, myMatrix)
myData
class(myData)
cnames <- c("patient", "age", "weight", "bp","rating", "test")
colnames(myData,cnames)
colnames(myData) <- cnames
myData
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
library('rCharts')
library('airquality')
install.packages("rCharts")
x <- rnorm(100)
hist(x)
y <- hist(x)
class(y)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
head(nlme)
library(mtcars)
install.packages("mtcars")
data(mtcars)
t.test(mtcars$mpg)$conf.int
qt(.975,df=8)*1/3
?subset
4cy <- subset(mtcars, cyl = 4, select = mpg)
cyl4 <- subset(mtcars, cyl = 4, select = mpg)
View(cyl4)
View(mtcars)
cyl4 <- subset(mtcars, cyl == 4, select = mpg)
cyl6 <- subset(mtcars, cyl == 6, select = mpg)
cyl4-cyl6
cyl4[1:7]-cyl6
cyl4[1:6]-cyl6
cyl4
cyl4$mpg-cyl6$mpg
cyl4$mpg[1:7]-cyl6$mpg
cyl6$mpg
diff <- cyl4$mpg[1:7]-cyl6$mpg
t.test(diff)$conf.int
diff <- cyl4$mpg-cyl6$mpg
t.test(diff)$conf.int
?t.test
s <- 30
n <- 9
round(sqrt((n - 1) * s^2/qchisq(c(0.975, 0.025), n - 1)), 3)
t.ci <- round(sqrt((n - 1) * s^2/qchisq(c(0.975, 0.025), n - 1)), 3)
1100 - t.ci
mn <- 1100
mn + c(-1, 1) * qt(0.975, n - 1) * s/sqrt(n)
n <- 9
mn <- -2
mn + c(-1, 1) * qt(0.975, n - 1) * s/sqrt(n)
-mn * sqrt(n)/ ( c(-1, 1) * qt(0.975, n - 1) )
n <- 10
mean1 <- 3
var1 <- .6
sd1 <- sqrt(var1)
mean2 <- 5
var2 <- .68
sd2 <- sqrt(var2)
n1 <- n2 <- 9
x1 <- -3  ##treated
x2 <- 1  ##placebo
s1 <- 1.5  ##treated
s2 <- 1.8  ##placebo
spsq <- ( (n1 - 1) * s1^2 + (n2 - 1) * s2^2) / (n1 + n2 - 2)
spsq
n <- 10
mean1 <- 3
var1 <- .6
sd1 <- sqrt(var1)
mean2 <- 5
var2 <- .68
sd2 <- sqrt(var2)
mse <- (va1 + var2) / 2
s12 <- sqrt(2*mse/n)
mse <- (var1 + var2) / 2
s12 <- sqrt(2*mse/n)
sd2 - sd1 + qt(s12)
sd2 - sd1 + qt(s12,n-1)
sd2 - sd1 - qt(s12,n-1)
s12 <- sqrt(2*mse/n)
sd2 - sd1 + qt(s12,n-1)
sd2 - sd1 - qt(s12,n-1)
mean2 - mean1 + qt(s12,n-1)
mean2 - mean1 - qt(s12,n-1)
mean2 - mean1 + qt(s12,n)
mean2 - mean1 - qt(s12,n)
sp <- sqrt((n-1)*var1 + (n-1)* var2) / (n+n+1)
tu <- (mean2 -mean1) / (sp * sqrt(2/n) )
mean1 - mean2 + qt(s12,n)
mean1 - mean2 - qt(s12,n)
mean1 - mean2 + qt(s12,n-1)
mean1 - mean2 - qt(s12,n-1)
s< -s12
mn <- mean1 - mean2
s <-s12
mn + c(-1, 1) * qt(0.975, n - 1) * s/sqrt(n)
deployApp(appName = "GradeCalculator")
setwd("C:/Documents/2014/Coursera/devdataprod-002/Project/Slidify/first_deck/ShinyGradeCalculator")
library(slidify)
publish(user = "yg2014", repo = "ShinyGradeCalculator")
publish(user = "yg2014", repo = "ShinyGradeCalculator")
publish(user = "yg2014", repo = "ShinyGradeCalculator")
publish(user = "yg2014", repo = "devdataprod-002-Slidify")
